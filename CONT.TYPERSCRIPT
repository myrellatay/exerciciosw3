Complete the sentence:


TypeScript allows developers to add 
types
 to JavaScript.

Complete the sentence:


JavaScript is a 
loosely
 typed language.

Create a "firstName" variable, string type using Implicit type:


let 
firstName
 = "Dylan";

Create a "firstName" variable, string type using Explicit type:


let 
firtsName
: 
string
 = "Dylan";

Create an empty "myVar" variable, and disable type checking:


let myVar: 
any
;

Create an empty "myVar" variable, and specify it should be an unknown type:


let myVar: 
unknown
;

Prevent the array from being changed:


const names: 
readonly
 string[] = ["Dylan"];

The order of value types does not matter for Tuples:


False


Define ourTuple as string and boolean, in that order:


let ourTuple: [
string
, 
boolean
];


const car: { type: 
string
, model: 
string
, year: 
number
 } = {
  type: "Toyota",
  model: "Corolla",
  year: 2009
};

Specify that the second property, called model, should be optional:


const car: { type: string, 
model?
: string } = {
  type: "Toyota"
};

Create an enum called myEnum, with 2 constants (myFirstConst, mySecondConst) with default values:


enum 
myEnum
 {
  
myFirstConst
,
  
mySecondConst

};

Create an enum called myEnum, with 2 constants (myFirstConst, mySecondConst) with the string values "first" and "second":


enum 
myEnum
 {
  
myFirstConst
 = "
First
",
  
mySecondConst
 = "
Second
"
};

Create an interface called myInterface, with the property myProp as a string:


interface
 
myinterface
 {
  
myProp
: 
string

}

Extend the myInterface interface from last exercise, and add a property myExtProp as a number:


interface
 myExtInterface 
extends
 
myInterface
 {
  
myExtProp
: 
number

}

Specify that the paramater "myVar" for the function can be either string or number:


function myFunc(myVar: 
string
 
|
 
number
) {
  console.log(myVar)
}

Create a function that returns the string "Learning is Fun!", with the return type explicitly defined:


function
 myFunc(): 
string
 {
  
return
 "Learning is Fun!";
}

Create a function that specifically does not return a value:


function
 myFunc(): 
void
 {
  console.log("Learning is Fun!");
}

Create a function with 2 parameters (myVar1 and myVar2), that are both strings:


function myFunc(
myVar1
: 
string
, 
myVar2
: 
string
) {
  return(myVar1 + myVar2);
}


Create a function with 2 parameters (myVar1 and myVar2,in that order), that are both strings.

Specify that myVar2 should be optional:


function myFunc(
myVar1
: 
string
, 
myVar2?
: 
string
) {
  return((myVar1 + (myVar2 || ""));
}

Cast the "unknown" variable myVar as a string, using the as keyword:


let myVar: unknown = "Hello world!";
console.log(
myVar as string
.length);
